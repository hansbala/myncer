/* tslint:disable */
/* eslint-disable */
/**
 * Myncer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Datasource } from './Datasource';
import {
    DatasourceFromJSON,
    DatasourceFromJSONTyped,
    DatasourceToJSON,
    DatasourceToJSONTyped,
} from './Datasource';

/**
 * 
 * @export
 * @interface Playlist
 */
export interface Playlist {
    /**
     * 
     * @type {Datasource}
     * @memberof Playlist
     */
    datasource: Datasource;
    /**
     * Unique, stable playlist identifier for the datasource.
     * @type {string}
     * @memberof Playlist
     */
    playlistId: string;
    /**
     * Name of the playlist.
     * @type {string}
     * @memberof Playlist
     */
    name?: string;
    /**
     * Description of the playlist.
     * @type {string}
     * @memberof Playlist
     */
    description?: string;
    /**
     * URL to the playlist's cover image.
     * @type {string}
     * @memberof Playlist
     */
    imageUrl?: string;
}



/**
 * Check if a given object implements the Playlist interface.
 */
export function instanceOfPlaylist(value: object): value is Playlist {
    if (!('datasource' in value) || value['datasource'] === undefined) return false;
    if (!('playlistId' in value) || value['playlistId'] === undefined) return false;
    return true;
}

export function PlaylistFromJSON(json: any): Playlist {
    return PlaylistFromJSONTyped(json, false);
}

export function PlaylistFromJSONTyped(json: any, ignoreDiscriminator: boolean): Playlist {
    if (json == null) {
        return json;
    }
    return {
        
        'datasource': DatasourceFromJSON(json['datasource']),
        'playlistId': json['playlistId'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
    };
}

export function PlaylistToJSON(json: any): Playlist {
    return PlaylistToJSONTyped(json, false);
}

export function PlaylistToJSONTyped(value?: Playlist | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'datasource': DatasourceToJSON(value['datasource']),
        'playlistId': value['playlistId'],
        'name': value['name'],
        'description': value['description'],
        'imageUrl': value['imageUrl'],
    };
}

