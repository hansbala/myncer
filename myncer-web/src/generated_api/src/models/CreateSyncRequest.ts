/* tslint:disable */
/* eslint-disable */
/**
 * Myncer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Datasource } from './Datasource';
import {
    DatasourceFromJSON,
    DatasourceFromJSONTyped,
    DatasourceToJSON,
    DatasourceToJSONTyped,
} from './Datasource';

/**
 * 
 * @export
 * @interface CreateSyncRequest
 */
export interface CreateSyncRequest {
    /**
     * 
     * @type {Datasource}
     * @memberof CreateSyncRequest
     */
    sourceDatasource?: Datasource;
    /**
     * The ID of the source playlist to sync from.
     * @type {string}
     * @memberof CreateSyncRequest
     */
    sourcePlaylistId?: string;
    /**
     * 
     * @type {Datasource}
     * @memberof CreateSyncRequest
     */
    targetDatasource?: Datasource;
    /**
     * The ID of the target playlist to sync to.
     * @type {string}
     * @memberof CreateSyncRequest
     */
    targetPlaylistId?: string;
}



/**
 * Check if a given object implements the CreateSyncRequest interface.
 */
export function instanceOfCreateSyncRequest(value: object): value is CreateSyncRequest {
    return true;
}

export function CreateSyncRequestFromJSON(json: any): CreateSyncRequest {
    return CreateSyncRequestFromJSONTyped(json, false);
}

export function CreateSyncRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSyncRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'sourceDatasource': json['sourceDatasource'] == null ? undefined : DatasourceFromJSON(json['sourceDatasource']),
        'sourcePlaylistId': json['sourcePlaylistId'] == null ? undefined : json['sourcePlaylistId'],
        'targetDatasource': json['targetDatasource'] == null ? undefined : DatasourceFromJSON(json['targetDatasource']),
        'targetPlaylistId': json['targetPlaylistId'] == null ? undefined : json['targetPlaylistId'],
    };
}

export function CreateSyncRequestToJSON(json: any): CreateSyncRequest {
    return CreateSyncRequestToJSONTyped(json, false);
}

export function CreateSyncRequestToJSONTyped(value?: CreateSyncRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sourceDatasource': DatasourceToJSON(value['sourceDatasource']),
        'sourcePlaylistId': value['sourcePlaylistId'],
        'targetDatasource': DatasourceToJSON(value['targetDatasource']),
        'targetPlaylistId': value['targetPlaylistId'],
    };
}

