/* tslint:disable */
/* eslint-disable */
/**
 * Myncer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Playlist } from './Playlist';
import {
    PlaylistFromJSON,
    PlaylistFromJSONTyped,
    PlaylistToJSON,
    PlaylistToJSONTyped,
} from './Playlist';

/**
 * 
 * @export
 * @interface ListDatasourcePlaylistsResponse
 */
export interface ListDatasourcePlaylistsResponse {
    /**
     * 
     * @type {Array<Playlist>}
     * @memberof ListDatasourcePlaylistsResponse
     */
    playlists: Array<Playlist>;
}

/**
 * Check if a given object implements the ListDatasourcePlaylistsResponse interface.
 */
export function instanceOfListDatasourcePlaylistsResponse(value: object): value is ListDatasourcePlaylistsResponse {
    if (!('playlists' in value) || value['playlists'] === undefined) return false;
    return true;
}

export function ListDatasourcePlaylistsResponseFromJSON(json: any): ListDatasourcePlaylistsResponse {
    return ListDatasourcePlaylistsResponseFromJSONTyped(json, false);
}

export function ListDatasourcePlaylistsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListDatasourcePlaylistsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'playlists': ((json['playlists'] as Array<any>).map(PlaylistFromJSON)),
    };
}

export function ListDatasourcePlaylistsResponseToJSON(json: any): ListDatasourcePlaylistsResponse {
    return ListDatasourcePlaylistsResponseToJSONTyped(json, false);
}

export function ListDatasourcePlaylistsResponseToJSONTyped(value?: ListDatasourcePlaylistsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'playlists': ((value['playlists'] as Array<any>).map(PlaylistToJSON)),
    };
}

