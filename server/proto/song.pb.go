// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: song.proto

package myncer_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Song struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ArtistName []string               `protobuf:"bytes,2,rep,name=artist_name,json=artistName,proto3" json:"artist_name,omitempty"`
	AlbumName  string                 `protobuf:"bytes,3,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`
	Datasource Datasource             `protobuf:"varint,4,opt,name=datasource,proto3,enum=myncer.Datasource" json:"datasource,omitempty"`
	// Unique, stable song identifier for the datasource.
	DatasourceSongId string `protobuf:"bytes,5,opt,name=datasource_song_id,json=datasourceSongId,proto3" json:"datasource_song_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_song_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_song_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_song_proto_rawDescGZIP(), []int{0}
}

func (x *Song) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Song) GetArtistName() []string {
	if x != nil {
		return x.ArtistName
	}
	return nil
}

func (x *Song) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

func (x *Song) GetDatasource() Datasource {
	if x != nil {
		return x.Datasource
	}
	return Datasource_DATASOURCE_UNSPECIFIED
}

func (x *Song) GetDatasourceSongId() string {
	if x != nil {
		return x.DatasourceSongId
	}
	return ""
}

var File_song_proto protoreflect.FileDescriptor

var file_song_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x79,
	0x6e, 0x63, 0x65, 0x72, 0x1a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x04, 0x53, 0x6f, 0x6e, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x79, 0x6e, 0x63, 0x65, 0x72,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x6f, 0x6e, 0x67, 0x49, 0x64, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x6e, 0x73, 0x62, 0x61, 0x6c, 0x61, 0x2f, 0x6d, 0x79, 0x6e,
	0x63, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x3b, 0x6d, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_song_proto_rawDescOnce sync.Once
	file_song_proto_rawDescData []byte
)

func file_song_proto_rawDescGZIP() []byte {
	file_song_proto_rawDescOnce.Do(func() {
		file_song_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_song_proto_rawDesc), len(file_song_proto_rawDesc)))
	})
	return file_song_proto_rawDescData
}

var file_song_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_song_proto_goTypes = []any{
	(*Song)(nil),    // 0: myncer.Song
	(Datasource)(0), // 1: myncer.Datasource
}
var file_song_proto_depIdxs = []int32{
	1, // 0: myncer.Song.datasource:type_name -> myncer.Datasource
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_song_proto_init() }
func file_song_proto_init() {
	if File_song_proto != nil {
		return
	}
	file_datasource_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_song_proto_rawDesc), len(file_song_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_song_proto_goTypes,
		DependencyIndexes: file_song_proto_depIdxs,
		MessageInfos:      file_song_proto_msgTypes,
	}.Build()
	File_song_proto = out.File
	file_song_proto_goTypes = nil
	file_song_proto_depIdxs = nil
}
