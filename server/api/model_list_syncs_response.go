/*
Myncer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListSyncsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSyncsResponse{}

// ListSyncsResponse struct for ListSyncsResponse
type ListSyncsResponse struct {
	Syncs []Sync `json:"syncs"`
}

type _ListSyncsResponse ListSyncsResponse

// NewListSyncsResponse instantiates a new ListSyncsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSyncsResponse(syncs []Sync) *ListSyncsResponse {
	this := ListSyncsResponse{}
	this.Syncs = syncs
	return &this
}

// NewListSyncsResponseWithDefaults instantiates a new ListSyncsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSyncsResponseWithDefaults() *ListSyncsResponse {
	this := ListSyncsResponse{}
	return &this
}

// GetSyncs returns the Syncs field value
func (o *ListSyncsResponse) GetSyncs() []Sync {
	if o == nil {
		var ret []Sync
		return ret
	}

	return o.Syncs
}

// GetSyncsOk returns a tuple with the Syncs field value
// and a boolean to check if the value has been set.
func (o *ListSyncsResponse) GetSyncsOk() ([]Sync, bool) {
	if o == nil {
		return nil, false
	}
	return o.Syncs, true
}

// SetSyncs sets field value
func (o *ListSyncsResponse) SetSyncs(v []Sync) {
	o.Syncs = v
}

func (o ListSyncsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSyncsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["syncs"] = o.Syncs
	return toSerialize, nil
}

func (o *ListSyncsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"syncs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListSyncsResponse := _ListSyncsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListSyncsResponse)

	if err != nil {
		return err
	}

	*o = ListSyncsResponse(varListSyncsResponse)

	return err
}

type NullableListSyncsResponse struct {
	value *ListSyncsResponse
	isSet bool
}

func (v NullableListSyncsResponse) Get() *ListSyncsResponse {
	return v.value
}

func (v *NullableListSyncsResponse) Set(val *ListSyncsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSyncsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSyncsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSyncsResponse(val *ListSyncsResponse) *NullableListSyncsResponse {
	return &NullableListSyncsResponse{value: val, isSet: true}
}

func (v NullableListSyncsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSyncsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


