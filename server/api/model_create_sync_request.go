/*
Myncer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CreateSyncRequest - struct for CreateSyncRequest
type CreateSyncRequest struct {
	OneWaySync *OneWaySync
}

// OneWaySyncAsCreateSyncRequest is a convenience function that returns OneWaySync wrapped in CreateSyncRequest
func OneWaySyncAsCreateSyncRequest(v *OneWaySync) CreateSyncRequest {
	return CreateSyncRequest{
		OneWaySync: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateSyncRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into OneWaySync
	err = newStrictDecoder(data).Decode(&dst.OneWaySync)
	if err == nil {
		jsonOneWaySync, _ := json.Marshal(dst.OneWaySync)
		if string(jsonOneWaySync) == "{}" { // empty struct
			dst.OneWaySync = nil
		} else {
			if err = validator.Validate(dst.OneWaySync); err != nil {
				dst.OneWaySync = nil
			} else {
				match++
			}
		}
	} else {
		dst.OneWaySync = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.OneWaySync = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateSyncRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateSyncRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateSyncRequest) MarshalJSON() ([]byte, error) {
	if src.OneWaySync != nil {
		return json.Marshal(&src.OneWaySync)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateSyncRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.OneWaySync != nil {
		return obj.OneWaySync
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CreateSyncRequest) GetActualInstanceValue() (interface{}) {
	if obj.OneWaySync != nil {
		return *obj.OneWaySync
	}

	// all schemas are nil
	return nil
}

type NullableCreateSyncRequest struct {
	value *CreateSyncRequest
	isSet bool
}

func (v NullableCreateSyncRequest) Get() *CreateSyncRequest {
	return v.value
}

func (v *NullableCreateSyncRequest) Set(val *CreateSyncRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSyncRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSyncRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSyncRequest(val *CreateSyncRequest) *NullableCreateSyncRequest {
	return &NullableCreateSyncRequest{value: val, isSet: true}
}

func (v NullableCreateSyncRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSyncRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


