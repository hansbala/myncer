/*
Myncer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateSyncRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSyncRequest{}

// CreateSyncRequest struct for CreateSyncRequest
type CreateSyncRequest struct {
	SourceDatasource *Datasource `json:"sourceDatasource,omitempty"`
	// The ID of the source playlist to sync from.
	SourcePlaylistId *string `json:"sourcePlaylistId,omitempty"`
	TargetDatasource *Datasource `json:"targetDatasource,omitempty"`
	// The ID of the target playlist to sync to.
	TargetPlaylistId *string `json:"targetPlaylistId,omitempty"`
}

// NewCreateSyncRequest instantiates a new CreateSyncRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSyncRequest() *CreateSyncRequest {
	this := CreateSyncRequest{}
	return &this
}

// NewCreateSyncRequestWithDefaults instantiates a new CreateSyncRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSyncRequestWithDefaults() *CreateSyncRequest {
	this := CreateSyncRequest{}
	return &this
}

// GetSourceDatasource returns the SourceDatasource field value if set, zero value otherwise.
func (o *CreateSyncRequest) GetSourceDatasource() Datasource {
	if o == nil || IsNil(o.SourceDatasource) {
		var ret Datasource
		return ret
	}
	return *o.SourceDatasource
}

// GetSourceDatasourceOk returns a tuple with the SourceDatasource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSyncRequest) GetSourceDatasourceOk() (*Datasource, bool) {
	if o == nil || IsNil(o.SourceDatasource) {
		return nil, false
	}
	return o.SourceDatasource, true
}

// HasSourceDatasource returns a boolean if a field has been set.
func (o *CreateSyncRequest) HasSourceDatasource() bool {
	if o != nil && !IsNil(o.SourceDatasource) {
		return true
	}

	return false
}

// SetSourceDatasource gets a reference to the given Datasource and assigns it to the SourceDatasource field.
func (o *CreateSyncRequest) SetSourceDatasource(v Datasource) {
	o.SourceDatasource = &v
}

// GetSourcePlaylistId returns the SourcePlaylistId field value if set, zero value otherwise.
func (o *CreateSyncRequest) GetSourcePlaylistId() string {
	if o == nil || IsNil(o.SourcePlaylistId) {
		var ret string
		return ret
	}
	return *o.SourcePlaylistId
}

// GetSourcePlaylistIdOk returns a tuple with the SourcePlaylistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSyncRequest) GetSourcePlaylistIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourcePlaylistId) {
		return nil, false
	}
	return o.SourcePlaylistId, true
}

// HasSourcePlaylistId returns a boolean if a field has been set.
func (o *CreateSyncRequest) HasSourcePlaylistId() bool {
	if o != nil && !IsNil(o.SourcePlaylistId) {
		return true
	}

	return false
}

// SetSourcePlaylistId gets a reference to the given string and assigns it to the SourcePlaylistId field.
func (o *CreateSyncRequest) SetSourcePlaylistId(v string) {
	o.SourcePlaylistId = &v
}

// GetTargetDatasource returns the TargetDatasource field value if set, zero value otherwise.
func (o *CreateSyncRequest) GetTargetDatasource() Datasource {
	if o == nil || IsNil(o.TargetDatasource) {
		var ret Datasource
		return ret
	}
	return *o.TargetDatasource
}

// GetTargetDatasourceOk returns a tuple with the TargetDatasource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSyncRequest) GetTargetDatasourceOk() (*Datasource, bool) {
	if o == nil || IsNil(o.TargetDatasource) {
		return nil, false
	}
	return o.TargetDatasource, true
}

// HasTargetDatasource returns a boolean if a field has been set.
func (o *CreateSyncRequest) HasTargetDatasource() bool {
	if o != nil && !IsNil(o.TargetDatasource) {
		return true
	}

	return false
}

// SetTargetDatasource gets a reference to the given Datasource and assigns it to the TargetDatasource field.
func (o *CreateSyncRequest) SetTargetDatasource(v Datasource) {
	o.TargetDatasource = &v
}

// GetTargetPlaylistId returns the TargetPlaylistId field value if set, zero value otherwise.
func (o *CreateSyncRequest) GetTargetPlaylistId() string {
	if o == nil || IsNil(o.TargetPlaylistId) {
		var ret string
		return ret
	}
	return *o.TargetPlaylistId
}

// GetTargetPlaylistIdOk returns a tuple with the TargetPlaylistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSyncRequest) GetTargetPlaylistIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetPlaylistId) {
		return nil, false
	}
	return o.TargetPlaylistId, true
}

// HasTargetPlaylistId returns a boolean if a field has been set.
func (o *CreateSyncRequest) HasTargetPlaylistId() bool {
	if o != nil && !IsNil(o.TargetPlaylistId) {
		return true
	}

	return false
}

// SetTargetPlaylistId gets a reference to the given string and assigns it to the TargetPlaylistId field.
func (o *CreateSyncRequest) SetTargetPlaylistId(v string) {
	o.TargetPlaylistId = &v
}

func (o CreateSyncRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSyncRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SourceDatasource) {
		toSerialize["sourceDatasource"] = o.SourceDatasource
	}
	if !IsNil(o.SourcePlaylistId) {
		toSerialize["sourcePlaylistId"] = o.SourcePlaylistId
	}
	if !IsNil(o.TargetDatasource) {
		toSerialize["targetDatasource"] = o.TargetDatasource
	}
	if !IsNil(o.TargetPlaylistId) {
		toSerialize["targetPlaylistId"] = o.TargetPlaylistId
	}
	return toSerialize, nil
}

type NullableCreateSyncRequest struct {
	value *CreateSyncRequest
	isSet bool
}

func (v NullableCreateSyncRequest) Get() *CreateSyncRequest {
	return v.value
}

func (v *NullableCreateSyncRequest) Set(val *CreateSyncRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSyncRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSyncRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSyncRequest(val *CreateSyncRequest) *NullableCreateSyncRequest {
	return &NullableCreateSyncRequest{value: val, isSet: true}
}

func (v NullableCreateSyncRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSyncRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


