/*
Myncer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ListDatasourcesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDatasourcesResponse{}

// ListDatasourcesResponse struct for ListDatasourcesResponse
type ListDatasourcesResponse struct {
	ConnectedDatasources []Datasource `json:"connectedDatasources,omitempty"`
}

// NewListDatasourcesResponse instantiates a new ListDatasourcesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDatasourcesResponse() *ListDatasourcesResponse {
	this := ListDatasourcesResponse{}
	return &this
}

// NewListDatasourcesResponseWithDefaults instantiates a new ListDatasourcesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDatasourcesResponseWithDefaults() *ListDatasourcesResponse {
	this := ListDatasourcesResponse{}
	return &this
}

// GetConnectedDatasources returns the ConnectedDatasources field value if set, zero value otherwise.
func (o *ListDatasourcesResponse) GetConnectedDatasources() []Datasource {
	if o == nil || IsNil(o.ConnectedDatasources) {
		var ret []Datasource
		return ret
	}
	return o.ConnectedDatasources
}

// GetConnectedDatasourcesOk returns a tuple with the ConnectedDatasources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDatasourcesResponse) GetConnectedDatasourcesOk() ([]Datasource, bool) {
	if o == nil || IsNil(o.ConnectedDatasources) {
		return nil, false
	}
	return o.ConnectedDatasources, true
}

// HasConnectedDatasources returns a boolean if a field has been set.
func (o *ListDatasourcesResponse) HasConnectedDatasources() bool {
	if o != nil && !IsNil(o.ConnectedDatasources) {
		return true
	}

	return false
}

// SetConnectedDatasources gets a reference to the given []Datasource and assigns it to the ConnectedDatasources field.
func (o *ListDatasourcesResponse) SetConnectedDatasources(v []Datasource) {
	o.ConnectedDatasources = v
}

func (o ListDatasourcesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDatasourcesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectedDatasources) {
		toSerialize["connectedDatasources"] = o.ConnectedDatasources
	}
	return toSerialize, nil
}

type NullableListDatasourcesResponse struct {
	value *ListDatasourcesResponse
	isSet bool
}

func (v NullableListDatasourcesResponse) Get() *ListDatasourcesResponse {
	return v.value
}

func (v *NullableListDatasourcesResponse) Set(val *ListDatasourcesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDatasourcesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDatasourcesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDatasourcesResponse(val *ListDatasourcesResponse) *NullableListDatasourcesResponse {
	return &NullableListDatasourcesResponse{value: val, isSet: true}
}

func (v NullableListDatasourcesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDatasourcesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


